#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: ai ts=4 sts=4 et sw=4 nu
from fcctozim.fetch import fetch_command

import argparse

from fcctozim import VERSION, logger
from fcctozim.build import build, build_zimfile
from fcctozim.prebuild import prebuild_command

def main(args):
    print(args)
    command = args.command

    if command == 'fetch':
        fetch_command(args)
    elif command == 'prebuild':
        prebuild_command(args)
    elif command == 'zim':
        build(args)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog='fcc2zim')

    # create sub-parser
    sub_parsers = parser.add_subparsers(help='sub-command help', dest='command')

    fetch_parser = sub_parsers.add_parser('fetch', help='fetch the latest curriculum')
    fetch_parser.add_argument('--filter', type=str, help='filter out curriculum not matching a path/glob')
    fetch_parser.add_argument('--tmp_dir', type=str, help='the temporary directory to hold the curriculum')
    fetch_parser.add_argument('--force', type=bool, help='force a re-download of the curriculum zip')

    prebuild_parse = sub_parsers.add_parser('prebuild', help='prebuild curriculum for Vite frontend')
    prebuild_parse.add_argument('--lang', type=str, help='Curriculum language')
    prebuild_parse.add_argument('--course', type=str, help='Course or course list (seperated by commas)', required=True)
    prebuild_parse.add_argument('--outdir', type=str, help='output directory (typically vite\'s src/assets folder)', required=True)
    prebuild_parse.add_argument('--tmp_dir', type=str, help='the temporary directory to hold the curriculum')

    zim_parse = sub_parsers.add_parser('zim', help='package up the zim file')
    zim_parse.add_argument('--clientdir', type=str, help='the directory containing our Vite application', required=True)
    zim_parse.add_argument('--outpath', type=str, help='the path of our output file')
    zim_parse.add_argument('--language', type=str, help='the path of our output file', required=True)
     
    args = parser.parse_args()
    main(args)
