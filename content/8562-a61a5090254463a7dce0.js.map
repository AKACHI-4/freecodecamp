{"version":3,"file":"8562-a61a5090254463a7dce0.js","mappings":"0MAGMA,EAAY,WAChB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACE,gCACE,wBAAME,UAAU,WAAWF,EAAE,oBAC7B,uBACEE,UAAU,2BACVC,OAAO,KACPC,QAAQ,YACRC,MAAM,KACNC,MAAM,8BAEN,wBAAMC,EAAE,sZAIhB,EAEAR,EAAUS,YAAc,YACxB,QCpBMC,EAAa,WACjB,IAAQT,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACE,gCACE,wBAAME,UAAU,WAAWF,EAAE,sBAC7B,uBACEE,UAAU,0BACVC,OAAO,KACPC,QAAQ,YACRC,MAAM,KACNC,MAAM,8BAEN,wBAAMC,EAAE,4MAIhB,EAEAE,EAAWD,YAAc,aACzB,Q,WCbME,EAAqB,SAAH,GAA0C,IAApCC,EAAQ,EAARA,SACpBX,GAAMC,EAAAA,EAAAA,KAAND,EACFY,EAAcZ,EAAE,sBAChBa,EAAYC,EAAAA,EAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAA5BC,EAAK,KAAEC,EAAQ,KAChBC,GAAkBC,EAAAA,EAAAA,QAAyB,MAcjD,OACE,uBAAKjB,UAAU,gBAAgB,cAAY,gBAAgBkB,IAAKT,GAC9D,uBAAKT,UAAU,sBACb,uBAAKA,UAAU,gBAAgB,UAAQ,iBACrC,wBACEmB,OAAO,GACPnB,UAAU,qBACV,UAAQ,qBACRoB,SAnBO,SAACC,GAChBA,EAAMC,iBACFR,GAASA,EAAMS,OAAS,GAC1BC,OAAOC,KAAQd,EAAS,UAAUe,mBAAmBZ,GAAU,SAEnE,EAeUa,KAAK,UAEL,yBAAO3B,UAAU,UAAU4B,QAAQ,uBAChC9B,EAAIA,EAAE,gBAAkB,IAE3B,yBACE+B,eAAe,MACfC,aAAa,MACbC,YAAY,MACZC,GAAG,sBACHhC,UAAU,sBACViC,UAAW,IACXC,SAlCK,SAACb,GAA0C,OAC1DN,EAASM,EAAMc,OAAOrB,MAAO,EAkCnBJ,YAAaA,EACb0B,WAAW,QACXC,KAAK,SACLvB,MAAOA,EACPI,IAAKF,IAEP,0BAAQhB,UAAU,uBAAuBqC,KAAK,UAC5C,gBAAC,EAAS,OAEXvB,GACC,0BACEd,UAAU,sBACVsC,QAvCE,WAAO,IAAD,EACpBvB,EAAS,IACc,QAAvB,EAAAC,EAAgBuB,eAAO,OAAvB,EAAyBC,OAC3B,EAqCcH,KAAK,UAEL,gBAAC,EAAU,UAQ3B,EAEA7B,EAAmBF,YAAc,qBACjC,O,mFC3EQmC,E,SAAAA,aAIFC,EAAiB,CACrBC,QAAS,CACPC,KAAM,OACNC,WAAY,6CAEdC,QAAS,CACPF,KAAM,UACNC,WAAY,qDAEdE,QAAS,CACPH,KAAM,UACNC,WAAY,qDAEd,sBAAuB,CACrBD,KAAM,UACNC,WAAY,qDAEdG,QAAS,CACPJ,KAAM,UACNC,WAAY,qDAEdI,WAAY,CACVL,KAAM,UACNC,WAAY,wDAGdK,UAAW,CACTN,KAAM,OACNC,WAAY,6CAEdM,SAAU,CACRP,KAAM,UACNC,WAAY,sDAGdO,OAAQ,CACNR,KAAM,OACNC,WAAY,6CAEdQ,OAAQ,CACNT,KAAM,UACNC,WAAY,qDAIHS,EAAYZ,EAAeD,GAAcG,KACzChC,EAAgB8B,EAAeD,GAAcI,U","sources":["webpack://@freecodecamp/client/./src/assets/icons/Magnifier.tsx","webpack://@freecodecamp/client/./src/assets/icons/inputReset.tsx","webpack://@freecodecamp/client/./src/components/search/searchBar/search-bar-optimized.tsx","webpack://@freecodecamp/client/./src/utils/algolia-locale-setup.ts"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Magnifier = (): JSX.Element => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <span className='sr-only'>{t('icons.magnifier')}</span>\n      <svg\n        className='ais-SearchBox-submitIcon'\n        height='10'\n        viewBox='0 0 40 40'\n        width='10'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path d='M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z' />\n      </svg>\n    </>\n  );\n};\n\nMagnifier.displayName = 'Magnifier';\nexport default Magnifier;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst InputReset = (): JSX.Element => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <span className='sr-only'>{t('icons.input-reset')}</span>\n      <svg\n        className='ais-SearchBox-resetIcon'\n        height='10'\n        viewBox='0 0 20 20'\n        width='10'\n        xmlns='http://www.w3.org/2000/svg'\n      >\n        <path d='M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z'></path>\n      </svg>\n    </>\n  );\n};\n\nInputReset.displayName = 'InputReset';\nexport default InputReset;\n","import React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Magnifier from '../../../assets/icons/Magnifier';\nimport InputReset from '../../../assets/icons/inputReset';\nimport { searchPageUrl } from '../../../utils/algolia-locale-setup';\n\ntype Props = {\n  innerRef?: React.RefObject<HTMLDivElement>;\n};\n\nconst SearchBarOptimized = ({ innerRef }: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const placeholder = t('search.placeholder');\n  const searchUrl = searchPageUrl;\n  const [value, setValue] = useState('');\n  const inputElementRef = useRef<HTMLInputElement>(null);\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value);\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (value && value.length > 1) {\n      window.open(`${searchUrl}?query=${encodeURIComponent(value)}`, '_blank');\n    }\n  };\n  const onClick = () => {\n    setValue('');\n    inputElementRef.current?.focus();\n  };\n\n  return (\n    <div className='fcc_searchBar' data-testid='fcc_searchBar' ref={innerRef}>\n      <div className='fcc_search_wrapper'>\n        <div className='ais-SearchBox' data-cy='ais-SearchBox'>\n          <form\n            action=''\n            className='ais-SearchBox-form'\n            data-cy='ais-SearchBox-form'\n            onSubmit={onSubmit}\n            role='search'\n          >\n            <label className='sr-only' htmlFor='ais-SearchBox-input'>\n              {t ? t('search.label') : ''}\n            </label>\n            <input\n              autoCapitalize='off'\n              autoComplete='off'\n              autoCorrect='off'\n              id='ais-SearchBox-input'\n              className='ais-SearchBox-input'\n              maxLength={512}\n              onChange={onChange}\n              placeholder={placeholder}\n              spellCheck='false'\n              type='search'\n              value={value}\n              ref={inputElementRef}\n            />\n            <button className='ais-SearchBox-submit' type='submit'>\n              <Magnifier />\n            </button>\n            {value && (\n              <button\n                className='ais-SearchBox-reset'\n                onClick={onClick}\n                type='button'\n              >\n                <InputReset />\n              </button>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSearchBarOptimized.displayName = 'SearchBarOptimized';\nexport default SearchBarOptimized;\n","import envData from '../../../config/env.json';\n\nconst { clientLocale } = envData as {\n  clientLocale: keyof typeof algoliaIndices;\n};\n\nconst algoliaIndices = {\n  english: {\n    name: 'news',\n    searchPage: 'https://www.freecodecamp.org/news/search/'\n  },\n  espanol: {\n    name: 'news-es',\n    searchPage: 'https://www.freecodecamp.org/espanol/news/search/'\n  },\n  chinese: {\n    name: 'news-zh',\n    searchPage: 'https://www.freecodecamp.org/chinese/news/search/'\n  },\n  'chinese-traditional': {\n    name: 'news-zh',\n    searchPage: 'https://www.freecodecamp.org/chinese/news/search/'\n  },\n  italian: {\n    name: 'news-it',\n    searchPage: 'https://www.freecodecamp.org/italian/news/search/'\n  },\n  portuguese: {\n    name: 'news-pt',\n    searchPage: 'https://www.freecodecamp.org/portuguese/news/search/'\n  },\n  // TODO: Replace with Ukrainian news when we have more useful resources on that instance\n  ukrainian: {\n    name: 'news',\n    searchPage: 'https://www.freecodecamp.org/news/search/'\n  },\n  japanese: {\n    name: 'news-ja',\n    searchPage: 'https://www.freecodecamp.org/japanese/news/search/'\n  },\n  // TODO: Replace with German news when we have more useful resources on that instance\n  german: {\n    name: 'news',\n    searchPage: 'https://www.freecodecamp.org/news/search/'\n  },\n  arabic: {\n    name: 'news-ar',\n    searchPage: 'https://www.freecodecamp.org/arabic/news/search/'\n  }\n};\n\nexport const newsIndex = algoliaIndices[clientLocale].name;\nexport const searchPageUrl = algoliaIndices[clientLocale].searchPage;\n"],"names":["Magnifier","t","useTranslation","className","height","viewBox","width","xmlns","d","displayName","InputReset","SearchBarOptimized","innerRef","placeholder","searchUrl","searchPageUrl","useState","value","setValue","inputElementRef","useRef","ref","action","onSubmit","event","preventDefault","length","window","open","encodeURIComponent","role","htmlFor","autoCapitalize","autoComplete","autoCorrect","id","maxLength","onChange","target","spellCheck","type","onClick","current","focus","clientLocale","algoliaIndices","english","name","searchPage","espanol","chinese","italian","portuguese","ukrainian","japanese","german","arabic","newsIndex"],"sourceRoot":""}