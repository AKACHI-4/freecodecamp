{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-own-properties",
    "result": {"data":{"challengeNode":{"challenge":{"block":"object-oriented-programming","title":"Understand Own Properties","description":"<section id=\"description\">\n<p>In the following example, the <code>Bird</code> constructor defines two properties: <code>name</code> and <code>numLegs</code>:</p>\n<pre><code class=\"language-js\">function Bird(name) {\n  this.name = name;\n  this.numLegs = 2;\n}\n\nlet duck = new Bird(\"Donald\");\nlet canary = new Bird(\"Tweety\");\n</code></pre>\n<p><code>name</code> and <code>numLegs</code> are called <dfn>own properties</dfn>, because they are defined directly on the instance object. That means that <code>duck</code> and <code>canary</code> each has its own separate copy of these properties. In fact every instance of <code>Bird</code> will have its own copy of these properties. The following code adds all of the own properties of <code>duck</code> to the array <code>ownProps</code>:</p>\n<pre><code class=\"language-js\">let ownProps = [];\n\nfor (let property in duck) {\n  if(duck.hasOwnProperty(property)) {\n    ownProps.push(property);\n  }\n}\n\nconsole.log(ownProps);\n</code></pre>\n<p>The console would display the value <code>[\"name\", \"numLegs\"]</code>.</p>\n</section>","id":"587d7dae367417b2b2512b7b","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the own properties of <code>canary</code> to the array <code>ownProps</code>.</p>\n</section>","notes":null,"removeComments":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","certification":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301326,"fields":{"blockName":"Object Oriented Programming","slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-own-properties","tests":[{"text":"<p><code>ownProps</code> should include the values <code>numLegs</code> and <code>name</code>.</p>","testString":"assert(ownProps.indexOf('name') !== -1 && ownProps.indexOf('numLegs') !== -1);"},{"text":"<p>You should solve this challenge without using the built in method <code>Object.keys()</code>.</p>","testString":"assert(!/Object(\\.keys|\\[(['\"`])keys\\2\\])/.test(code));"},{"text":"<p>You should solve this challenge without hardcoding the <code>ownProps</code> array.</p>","testString":"assert(\n  !/\\[\\s*(?:'|\")(?:name|numLegs)|(?:push|concat)\\(\\s*(?:'|\")(?:name|numLegs)/.test(\n    code\n  )\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function Bird(name) {\n  this.name = name;\n  this.numLegs = 2;\n}\n\nlet canary = new Bird(\"Tweety\");\nlet ownProps = [];\n// Only change code below this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"certification":"javascript-algorithms-and-data-structures","superBlock":"javascript-algorithms-and-data-structures","block":"object-oriented-programming","template":"","required":[],"nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-prototype-properties-to-reduce-duplicate-code","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/verify-an-objects-constructor-with-instanceof","id":"587d7dae367417b2b2512b7b"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const funModule = (function () {\n  return {\n    isCuteMixin: obj => {\n      obj.isCute = () => true;\n    },\n    singMixin: obj => {\n      obj.sing = () => console.log(\"Singing to an awesome tune\");\n    }\n  };\n})();","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-own-properties"}},
    "staticQueryHashes": ["1368483026","3216307819"]}