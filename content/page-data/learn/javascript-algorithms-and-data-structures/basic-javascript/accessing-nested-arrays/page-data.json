{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Accessing Nested Arrays","description":"<section id=\"description\">\n<p>As we have seen in earlier examples, objects can contain both nested objects and nested arrays. Similar to accessing nested objects, array bracket notation can be chained to access nested arrays.</p>\n<p>Here is an example of how to access a nested array:</p>\n<pre><code class=\"language-js\">const ourPets = [\n  {\n    animalType: \"cat\",\n    names: [\n      \"Meowzer\",\n      \"Fluffy\",\n      \"Kit-Cat\"\n    ]\n  },\n  {\n    animalType: \"dog\",\n    names: [\n      \"Spot\",\n      \"Bowser\",\n      \"Frankie\"\n    ]\n  }\n];\n\nourPets[0].names[1];\nourPets[1].names[0];\n</code></pre>\n<p><code>ourPets[0].names[1]</code> would be the string <code>Fluffy</code>, and <code>ourPets[1].names[0]</code> would be the string <code>Spot</code>.</p>\n</section>","id":"56533eb9ac21ba0edf2244cd","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Using dot and bracket notation, set the variable <code>secondTree</code> to the second item in the <code>trees</code> list from the <code>myPlants</code> object.</p>\n</section>","notes":null,"removeComments":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cLeGDtZ","superBlock":"javascript-algorithms-and-data-structures","certification":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16160,"fields":{"blockName":"Basic JavaScript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays","tests":[{"text":"<p><code>secondTree</code> should equal the string <code>pine</code>.</p>","testString":"assert(secondTree === 'pine');"},{"text":"<p>Your code should use dot and bracket notation to access <code>myPlants</code>.</p>","testString":"assert(/=\\s*myPlants\\[1\\].list\\[1\\]/.test(code));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const myPlants = [\n  {\n    type: \"flowers\",\n    list: [\n      \"rose\",\n      \"tulip\",\n      \"dandelion\"\n    ]\n  },\n  {\n    type: \"trees\",\n    list: [\n      \"fir\",\n      \"pine\",\n      \"birch\"\n    ]\n  }\n];\n\nconst secondTree = \"\";","head":"","tail":"(function(x) {\n  if(typeof x != 'undefined') {\n    return \"secondTree = \" + x;\n  }\n  return \"secondTree is undefined\";\n})(secondTree);","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"certification":"javascript-algorithms-and-data-structures","superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","template":"","required":[],"nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/record-collection","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-objects","id":"56533eb9ac21ba0edf2244cd"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays"}},
    "staticQueryHashes": ["1368483026","3216307819"]}