{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/escaping-literal-quotes-in-strings",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Escaping Literal Quotes in Strings","description":"<section id=\"description\">\n<p>When you are defining a string you must start and end with a single or double quote. What happens when you need a literal quote: <code>\"</code> or <code>'</code> inside of your string?</p>\n<p>In JavaScript, you can <dfn>escape</dfn> a quote from considering it as an end of string quote by placing a <dfn>backslash</dfn> (<code>\\</code>) in front of the quote.</p>\n<pre><code class=\"language-js\">const sampleStr = \"Alan said, \\\"Peter is learning JavaScript\\\".\";\n</code></pre>\n<p>This signals to JavaScript that the following quote is not the end of the string, but should instead appear inside the string. So if you were to print this to the console, you would get:</p>\n<pre><code class=\"language-js\">Alan said, \"Peter is learning JavaScript\".\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244b5","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use <dfn>backslashes</dfn> to assign a string to the <code>myStr</code> variable so that if you were to print it to the console, you would see:</p>\n<pre><code class=\"language-js\">I am a \"double quoted\" string inside \"double quotes\".\n</code></pre>\n</section>","notes":null,"removeComments":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c2QvgSr","superBlock":"javascript-algorithms-and-data-structures","certification":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":17568,"fields":{"blockName":"Basic JavaScript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/escaping-literal-quotes-in-strings","tests":[{"text":"<p>You should use two double quotes (<code>\"</code>) and four escaped double quotes (<code>\\\"</code>).</p>","testString":"assert(code.match(/\\\\\"/g).length === 4 && code.match(/[^\\\\]\"/g).length === 2);"},{"text":"<p>Variable <code>myStr</code> should contain the string: <code>I am a \"double quoted\" string inside \"double quotes\".</code></p>","testString":"assert(/I am a \"double quoted\" string inside \"double quotes(\\.\"|\"\\.)$/.test(myStr));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const myStr = \"\"; // Change this line","head":"","tail":"(function(){\n  if(typeof myStr === 'string') {\n    console.log(\"myStr = \\\"\" + myStr + \"\\\"\");\n  } else {\n    console.log(\"myStr is undefined\");\n  }\n})();","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"certification":"javascript-algorithms-and-data-structures","superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","template":"","required":[],"nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/quoting-strings-with-single-quotes","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/compound-assignment-with-augmented-division","id":"56533eb9ac21ba0edf2244b5"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/escaping-literal-quotes-in-strings"}},
    "staticQueryHashes": ["1368483026","3216307819"]}