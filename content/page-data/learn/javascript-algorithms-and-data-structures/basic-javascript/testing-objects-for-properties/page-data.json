{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Testing Objects for Properties","description":"<section id=\"description\">\n<p>Sometimes it is useful to check if the property of a given object exists or not. We can use the <code>.hasOwnProperty(propname)</code> method of objects to determine if that object has the given property name. <code>.hasOwnProperty()</code> returns <code>true</code> or <code>false</code> if the property is found or not.</p>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">const myObj = {\n  top: \"hat\",\n  bottom: \"pants\"\n};\n\nmyObj.hasOwnProperty(\"top\");\nmyObj.hasOwnProperty(\"middle\");\n</code></pre>\n<p>The first <code>hasOwnProperty</code> returns <code>true</code>, while the second returns <code>false</code>.</p>\n</section>","id":"567af2437cbaa8c51670a16c","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Modify the function <code>checkObj</code> to test if an object passed to the function (<code>obj</code>) contains a specific property (<code>checkProp</code>). If the property is found, return that property's value. If not, return <code>\"Not Found\"</code>.</p>\n</section>","notes":null,"removeComments":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","certification":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18324,"fields":{"blockName":"Basic JavaScript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties","tests":[{"text":"<p><code>checkObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"gift\")</code> should return the string <code>pony</code>.</p>","testString":"assert(\n  checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'gift') === 'pony'\n);"},{"text":"<p><code>checkObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"pet\")</code> should return the string <code>kitten</code>.</p>","testString":"assert(\n  checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'pet') === 'kitten'\n);"},{"text":"<p><code>checkObj({gift: \"pony\", pet: \"kitten\", bed: \"sleigh\"}, \"house\")</code> should return the string <code>Not Found</code>.</p>","testString":"assert(\n  checkObj({ gift: 'pony', pet: 'kitten', bed: 'sleigh' }, 'house') ===\n    'Not Found'\n);"},{"text":"<p><code>checkObj({city: \"Seattle\"}, \"city\")</code> should return the string <code>Seattle</code>.</p>","testString":"assert(checkObj({ city: 'Seattle' }, 'city') === 'Seattle');"},{"text":"<p><code>checkObj({city: \"Seattle\"}, \"district\")</code> should return the string <code>Not Found</code>.</p>","testString":"assert(checkObj({ city: 'Seattle' }, 'district') === 'Not Found');"},{"text":"<p><code>checkObj({pet: \"kitten\", bed: \"sleigh\"}, \"gift\")</code> should return the string <code>Not Found</code>.</p>","testString":"assert(checkObj({ pet: 'kitten', bed: 'sleigh' }, 'gift') === 'Not Found');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function checkObj(obj, checkProp) {\n  // Only change code below this line\n  return \"Change Me!\";\n  // Only change code above this line\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"certification":"javascript-algorithms-and-data-structures","superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","template":"","required":[],"nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulating-complex-objects","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/using-objects-for-lookups","id":"567af2437cbaa8c51670a16c"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties"}},
    "staticQueryHashes": ["1368483026","3216307819"]}