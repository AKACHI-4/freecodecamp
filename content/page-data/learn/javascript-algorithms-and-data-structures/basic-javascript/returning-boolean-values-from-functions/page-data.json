{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/returning-boolean-values-from-functions",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Returning Boolean Values from Functions","description":"<section id=\"description\">\n<p>You may recall from <a href=\"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-equality-operator\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Comparison with the Equality Operator</a> that all comparison operators return a boolean <code>true</code> or <code>false</code> value.</p>\n<p>Sometimes people use an <code>if/else</code> statement to do a comparison, like this:</p>\n<pre><code class=\"language-js\">function isEqual(a, b) {\n  if (a === b) {\n    return true;\n  } else {\n    return false;\n  }\n}\n</code></pre>\n<p>But there's a better way to do this. Since <code>===</code> returns <code>true</code> or <code>false</code>, we can return the result of the comparison:</p>\n<pre><code class=\"language-js\">function isEqual(a, b) {\n  return a === b;\n}\n</code></pre>\n</section>","id":"5679ceb97cbaa8c51670a16b","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Fix the function <code>isLess</code> to remove the <code>if/else</code> statements.</p>\n</section>","notes":null,"removeComments":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cp62qAQ","superBlock":"javascript-algorithms-and-data-structures","certification":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18273,"fields":{"blockName":"Basic JavaScript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/returning-boolean-values-from-functions","tests":[{"text":"<p><code>isLess(10, 15)</code> should return <code>true</code></p>","testString":"assert(isLess(10, 15) === true);"},{"text":"<p><code>isLess(15, 10)</code> should return <code>false</code></p>","testString":"assert(isLess(15, 10) === false);"},{"text":"<p>You should not use any <code>if</code> or <code>else</code> statements</p>","testString":"assert(!/if|else/g.test(code));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function isLess(a, b) {\n  // Only change code below this line\n  if (a < b) {\n    return true;\n  } else {\n    return false;\n  }\n  // Only change code above this line\n}\n\nisLess(10, 15);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"certification":"javascript-algorithms-and-data-structures","superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","template":"","required":[],"nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/return-early-pattern-for-functions","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/replacing-if-else-chains-with-switch","id":"5679ceb97cbaa8c51670a16b"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/returning-boolean-values-from-functions"}},
    "staticQueryHashes": ["1368483026","3216307819"]}