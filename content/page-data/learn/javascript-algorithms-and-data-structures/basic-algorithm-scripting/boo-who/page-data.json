{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/boo-who",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-algorithm-scripting","title":"Boo who","description":"<section id=\"description\">\n<p>Check if a value is classified as a boolean primitive. Return <code>true</code> or <code>false</code>.</p>\n<p>Boolean primitives are <code>true</code> and <code>false</code>.</p>\n</section>","id":"a77dbc43c33f39daa4429b4f","hasEditableBoundaries":false,"instructions":null,"notes":null,"removeComments":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","certification":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16000,"fields":{"blockName":"Basic Algorithm Scripting","slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/boo-who","tests":[{"text":"<p><code>booWho(true)</code> should return <code>true</code>.</p>","testString":"assert.strictEqual(booWho(true), true);"},{"text":"<p><code>booWho(false)</code> should return <code>true</code>.</p>","testString":"assert.strictEqual(booWho(false), true);"},{"text":"<p><code>booWho([1, 2, 3])</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho([1, 2, 3]), false);"},{"text":"<p><code>booWho([].slice)</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho([].slice), false);"},{"text":"<p><code>booWho({ \"a\": 1 })</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho({ a: 1 }), false);"},{"text":"<p><code>booWho(1)</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho(1), false);"},{"text":"<p><code>booWho(NaN)</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho(NaN), false);"},{"text":"<p><code>booWho(\"a\")</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho('a'), false);"},{"text":"<p><code>booWho(\"true\")</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho('true'), false);"},{"text":"<p><code>booWho(\"false\")</code> should return <code>false</code>.</p>","testString":"assert.strictEqual(booWho('false'), false);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function booWho(bool) {\n  return bool;\n}\n\nbooWho(null);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"certification":"javascript-algorithms-and-data-structures","superBlock":"javascript-algorithms-and-data-structures","block":"basic-algorithm-scripting","template":"","required":[],"nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/title-case-a-sentence","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/finders-keepers","id":"a77dbc43c33f39daa4429b4f"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function chunkArrayInGroups(arr, size) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i += size) {\n    out.push(arr.slice(i, i + size));\n  }\n\n  return out;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/boo-who"}},
    "staticQueryHashes": ["1368483026","3216307819"]}