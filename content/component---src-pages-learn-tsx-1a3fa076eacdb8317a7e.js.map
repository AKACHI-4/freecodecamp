{"version":3,"file":"component---src-pages-learn-tsx-1a3fa076eacdb8317a7e.js","mappings":"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","sources":["webpack://@freecodecamp/client/./src/components/Intro/components/IntroDescription.tsx","webpack://@freecodecamp/client/./src/components/create-redirect.ts","webpack://@freecodecamp/client/./src/components/layouts/learn.tsx","webpack://@freecodecamp/client/./src/components/Intro/learn-alert.tsx","webpack://@freecodecamp/client/./src/components/Intro/index.tsx","webpack://@freecodecamp/client/./src/pages/learn.tsx"],"sourcesContent":["import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport envData from '../../../../../config/env.json';\nimport { Link, Spacer } from '../../helpers';\n\nimport '../intro.css';\n\nconst { forumLocation } = envData;\nfunction IntroDescription(): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <div className='intro-description'>\n      <strong>{t('learn.read-this.heading')}</strong>\n      <Spacer />\n      <p>{t('learn.read-this.p1')}</p>\n      <p>{t('learn.read-this.p2')}</p>\n      <p>{t('learn.read-this.p3')}</p>\n      <p>{t('learn.read-this.p4')}</p>\n      <p>{t('learn.read-this.p5')}</p>\n      <p>{t('learn.read-this.p6')}</p>\n      <p>{t('learn.read-this.p7')}</p>\n      <p>{t('learn.read-this.p8')}</p>\n      <p>\n        <Trans i18nKey='learn.read-this.p9'>\n          <Link className='inline' to='https://youtube.com/freecodecamp' />\n        </Trans>\n      </p>\n      <p>{t('learn.read-this.p10')}</p>\n      <p>\n        <Trans i18nKey='learn.read-this.p11'>\n          <Link className='inline' to={forumLocation} />\n        </Trans>\n      </p>\n      <p>{t('learn.read-this.p12')}</p>\n    </div>\n  );\n}\n\nIntroDescription.displayName = 'IntroDescription';\n\nexport default IntroDescription;\n","/* eslint-disable react/display-name */\nimport { navigate } from 'gatsby';\n\nconst createRedirect =\n  (to = '/'): (() => JSX.Element | null) =>\n  () => {\n    if (typeof window !== 'undefined') {\n      void navigate(to);\n    }\n    return null;\n  };\n\nexport default createRedirect;\n","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Loader } from '../../components/helpers';\nimport { tryToShowDonationModal } from '../../redux/actions';\nimport {\n  userFetchStateSelector,\n  isSignedInSelector,\n  userSelector\n} from '../../redux/selectors';\nimport DonateModal from '../Donation/donation-modal';\nimport createRedirect from '../create-redirect';\n\nimport './prism.css';\nimport './prism-night.css';\nimport 'react-reflex/styles.css';\nimport './learn.css';\n\ntype FetchState = {\n  pending: boolean;\n  complete: boolean;\n  errored: boolean;\n};\n\ntype User = {\n  acceptedPrivacyTerms: boolean;\n};\n\nconst mapStateToProps = createSelector(\n  userFetchStateSelector,\n  isSignedInSelector,\n  userSelector,\n  (fetchState: FetchState, isSignedIn, user: User) => ({\n    fetchState,\n    isSignedIn,\n    user\n  })\n);\n\nconst mapDispatchToProps = {\n  tryToShowDonationModal\n};\n\nconst RedirectEmailSignUp = createRedirect('/email-sign-up');\n\ntype LearnLayoutProps = {\n  isSignedIn?: boolean;\n  fetchState: FetchState;\n  user: User;\n  tryToShowDonationModal: () => void;\n  children?: React.ReactNode;\n};\n\nfunction LearnLayout({\n  isSignedIn,\n  fetchState,\n  user,\n  tryToShowDonationModal,\n  children\n}: LearnLayoutProps): JSX.Element {\n  useEffect(() => {\n    tryToShowDonationModal();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      const metaTag = document.querySelector(`meta[name=\"robots\"]`);\n      if (metaTag) {\n        metaTag.remove();\n      }\n    };\n  }, []);\n\n  if (fetchState.pending && !fetchState.complete) {\n    return <Loader fullScreen={true} />;\n  }\n\n  if (isSignedIn && !user.acceptedPrivacyTerms) {\n    return <RedirectEmailSignUp />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <meta content='noindex' name='robots' />\n      </Helmet>\n      <main id='learn-app-wrapper'>{children}</main>\n      <DonateModal />\n    </>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearnLayout);\n","import React from 'react';\nimport { Alert } from '@freecodecamp/react-bootstrap';\nimport { useFeature } from '@growthbook/growthbook-react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from '../helpers';\n\ninterface LearnAlertProps {\n  onDonationAlertClick: () => void;\n  isDonating: boolean;\n}\n\nconst LearnAlert = ({\n  onDonationAlertClick,\n  isDonating\n}: LearnAlertProps): JSX.Element | null => {\n  const { t } = useTranslation();\n  const researchRecruitment = useFeature('show-research-recruitment-alert');\n  const universityCreation = useFeature('university-creation-alert');\n  const seasonalMessage = useFeature('seasonal-alert');\n\n  const researchRecruitmentAlert = (\n    <Alert>\n      <p>\n        <b>Launching Oct 19</b>: freeCodeCamp is teaming up with researchers\n        from Stanford and UPenn to study how to help people build strong coding\n        habits.\n      </p>\n      <p style={{ marginBottom: 20, marginTop: 14 }}>\n        Would you like to get involved? Youâ€™ll get free coaching from our\n        scientists.\n      </p>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Link\n          className='btn'\n          key='donate'\n          sameTab={false}\n          to='https://wharton.qualtrics.com/jfe/form/SV_57rJfXROkQDDU2y'\n        >\n          Learn about HabitLab\n        </Link>\n      </div>\n    </Alert>\n  );\n\n  const seasonalMessageAlert = (\n    <Alert bsStyle='info' className='annual-donation-alert'>\n      <p>\n        <b>{t('learn.season-greetings-fcc')}</b>\n      </p>\n      <p>{t('learn.if-getting-value')}</p>\n      <hr />\n      <p className={'text-center'}>\n        <Link\n          className='btn'\n          key='donate'\n          sameTab={false}\n          to='/donate'\n          onClick={onDonationAlertClick}\n        >\n          {t('buttons.donate')}\n        </Link>\n      </p>\n    </Alert>\n  );\n\n  const universityCreationAlert = (\n    <Alert bsStyle='info' className='annual-donation-alert'>\n      <p>\n        <b>{t('learn.building-a-university')}</b>\n      </p>\n      <p>{t('learn.if-help-university')}</p>\n      <hr />\n      <p className={'text-center'}>\n        <Link\n          className='btn'\n          key='donate'\n          sameTab={false}\n          to='/donate'\n          onClick={onDonationAlertClick}\n        >\n          {t('donate.become-supporter')}\n        </Link>\n      </p>\n    </Alert>\n  );\n\n  if (researchRecruitment.on) return researchRecruitmentAlert;\n  if (universityCreation.on && !isDonating) return universityCreationAlert;\n  if (seasonalMessage.on) return seasonalMessageAlert;\n  return null;\n};\n\nLearnAlert.displayName = 'LearnAlert';\n\nexport default LearnAlert;\n","import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { randomQuote } from '../../utils/get-words';\nimport Login from '../Header/components/Login';\nimport { Link, Spacer, Loader } from '../helpers';\nimport IntroDescription from './components/IntroDescription';\n\nimport './intro.css';\nimport LearnAlert from './learn-alert';\n\ninterface IntroProps {\n  complete?: boolean;\n  completedChallengeCount?: number;\n  isSignedIn?: boolean;\n  name?: string;\n  pending?: boolean;\n  slug?: string;\n  username?: string;\n  onDonationAlertClick: () => void;\n  isDonating: boolean;\n}\n\nconst Intro = ({\n  isSignedIn,\n  name,\n  pending,\n  complete,\n  completedChallengeCount,\n  slug,\n  onDonationAlertClick,\n  isDonating\n}: IntroProps): JSX.Element => {\n  const { t } = useTranslation();\n  if (pending && !complete) {\n    return (\n      <>\n        <Spacer />\n        <Loader />\n        <Spacer />\n      </>\n    );\n  } else if (isSignedIn) {\n    const { quote, author } = randomQuote();\n    return (\n      <>\n        <Spacer />\n        <h1 className='text-center'>\n          {name\n            ? `${t('learn.welcome-1', { name: name })}`\n            : `${t('learn.welcome-2')}`}\n        </h1>\n        <Spacer />\n        <div className='text-center quote-partial'>\n          <blockquote className='blockquote'>\n            <span>\n              <q>{quote}</q>\n              <footer className='quote-author blockquote-footer'>\n                <cite>{author}</cite>\n              </footer>\n            </span>\n          </blockquote>\n        </div>\n        <LearnAlert\n          onDonationAlertClick={onDonationAlertClick}\n          isDonating={isDonating}\n        />\n        {completedChallengeCount && slug && completedChallengeCount < 15 ? (\n          <div className='intro-description'>\n            <Spacer />\n            <p>\n              <Trans i18nKey='learn.start-at-beginning'>\n                <Link to={slug} />\n              </Trans>\n            </p>\n          </div>\n        ) : (\n          ''\n        )}\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Spacer />\n        <h1>{t('learn.heading')}</h1>\n        <Spacer />\n        <IntroDescription />\n        <Spacer />\n        <Login block={true}>{t('buttons.logged-out-cta-btn')}</Login>\n        <Spacer />\n      </>\n    );\n  }\n};\n\nIntro.displayName = 'Intro';\n\nexport default Intro;\n","import { Grid, Row, Col } from '@freecodecamp/react-bootstrap';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport Intro from '../components/Intro';\nimport Map from '../components/Map';\nimport { Spacer } from '../components/helpers';\nimport LearnLayout from '../components/layouts/learn';\nimport { defaultDonation } from '../../../config/donation-settings';\nimport {\n  isSignedInSelector,\n  userSelector,\n  userFetchStateSelector\n} from '../redux/selectors';\n\nimport { executeGA } from '../redux/actions';\n\ninterface FetchState {\n  pending: boolean;\n  complete: boolean;\n  errored: boolean;\n}\n\ninterface User {\n  name: string;\n  username: string;\n  completedChallengeCount: number;\n  isDonating: boolean;\n}\n\nconst mapStateToProps = createSelector(\n  userFetchStateSelector,\n  isSignedInSelector,\n  userSelector,\n  (fetchState: FetchState, isSignedIn: boolean, user: User) => ({\n    fetchState,\n    isSignedIn,\n    user\n  })\n);\n\ninterface Slug {\n  slug: string;\n}\n\ninterface LearnPageProps {\n  isSignedIn: boolean;\n  fetchState: FetchState;\n  state: Record<string, unknown>;\n  user: User;\n  executeGA: (payload: Record<string, unknown>) => void;\n  data: {\n    challengeNode: {\n      challenge: {\n        fields: Slug;\n      };\n    };\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ executeGA }, dispatch);\n\nfunction LearnPage({\n  isSignedIn,\n  executeGA,\n  fetchState: { pending, complete },\n  user: { name = '', completedChallengeCount = 0, isDonating = false },\n  data: {\n    challengeNode: {\n      challenge: {\n        fields: { slug }\n      }\n    }\n  }\n}: LearnPageProps) {\n  const { t } = useTranslation();\n\n  const onDonationAlertClick = () => {\n    executeGA({\n      event: 'donationrelated',\n      action: `Learn Donation Alert Click`,\n      duration: defaultDonation.donationDuration,\n      amount: defaultDonation.donationAmount\n    });\n  };\n  return (\n    <LearnLayout>\n      <Helmet title={t('metaTags:title')} />\n      <Grid>\n        <Row>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Intro\n              complete={complete}\n              completedChallengeCount={completedChallengeCount}\n              isSignedIn={isSignedIn}\n              name={name}\n              pending={pending}\n              slug={slug}\n              onDonationAlertClick={onDonationAlertClick}\n              isDonating={isDonating}\n            />\n            <Map />\n            <Spacer size={2} />\n          </Col>\n        </Row>\n      </Grid>\n    </LearnLayout>\n  );\n}\n\nLearnPage.displayName = 'LearnPage';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearnPage);\n\nexport const query = graphql`\n  query FirstChallenge {\n    challengeNode(\n      challenge: {\n        superOrder: { eq: 0 }\n        order: { eq: 0 }\n        challengeOrder: { eq: 0 }\n      }\n    ) {\n      challenge {\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["forumLocation","envData","IntroDescription","t","useTranslation","className","i18nKey","to","displayName","window","navigate","mapStateToProps","createSelector","userFetchStateSelector","isSignedInSelector","userSelector","fetchState","isSignedIn","user","mapDispatchToProps","tryToShowDonationModal","RedirectEmailSignUp","createRedirect","connect","children","useEffect","metaTag","document","querySelector","remove","pending","complete","fullScreen","acceptedPrivacyTerms","content","name","id","LearnAlert","onDonationAlertClick","isDonating","researchRecruitment","useFeature","universityCreation","seasonalMessage","researchRecruitmentAlert","style","marginBottom","marginTop","display","justifyContent","key","sameTab","seasonalMessageAlert","bsStyle","onClick","universityCreationAlert","on","Intro","completedChallengeCount","slug","randomQuote","quote","author","Trans","Login","block","LearnPage","executeGA","data","challengeNode","challenge","fields","Helmet","title","md","mdOffset","sm","smOffset","xs","event","action","duration","defaultDonation","amount","Map","size","dispatch","bindActionCreators"],"sourceRoot":""}