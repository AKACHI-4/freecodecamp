{"version":3,"file":"component---src-pages-email-sign-up-tsx-a16e1f49a6cb1390691d.js","mappings":"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","sources":["webpack://@freecodecamp/client/./src/components/Intro/components/IntroDescription.tsx","webpack://@freecodecamp/client/./src/components/create-redirect.ts","webpack://@freecodecamp/client/./src/pages/email-sign-up.tsx"],"sourcesContent":["import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport envData from '../../../../../config/env.json';\nimport { Link, Spacer } from '../../helpers';\n\nimport '../intro.css';\n\nconst { forumLocation } = envData;\nfunction IntroDescription(): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <div className='intro-description'>\n      <strong>{t('learn.read-this.heading')}</strong>\n      <Spacer />\n      <p>{t('learn.read-this.p1')}</p>\n      <p>{t('learn.read-this.p2')}</p>\n      <p>{t('learn.read-this.p3')}</p>\n      <p>{t('learn.read-this.p4')}</p>\n      <p>{t('learn.read-this.p5')}</p>\n      <p>{t('learn.read-this.p6')}</p>\n      <p>{t('learn.read-this.p7')}</p>\n      <p>{t('learn.read-this.p8')}</p>\n      <p>\n        <Trans i18nKey='learn.read-this.p9'>\n          <Link className='inline' to='https://youtube.com/freecodecamp' />\n        </Trans>\n      </p>\n      <p>{t('learn.read-this.p10')}</p>\n      <p>\n        <Trans i18nKey='learn.read-this.p11'>\n          <Link className='inline' to={forumLocation} />\n        </Trans>\n      </p>\n      <p>{t('learn.read-this.p12')}</p>\n    </div>\n  );\n}\n\nIntroDescription.displayName = 'IntroDescription';\n\nexport default IntroDescription;\n","/* eslint-disable react/display-name */\nimport { navigate } from 'gatsby';\n\nconst createRedirect =\n  (to = '/'): (() => JSX.Element | null) =>\n  () => {\n    if (typeof window !== 'undefined') {\n      void navigate(to);\n    }\n    return null;\n  };\n\nexport default createRedirect;\n","import { Row, Col, Button, Grid } from '@freecodecamp/react-bootstrap';\nimport React, { useEffect, useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { TFunction, withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport IntroDescription from '../components/Intro/components/IntroDescription';\nimport createRedirect from '../components/create-redirect';\nimport { ButtonSpacer, Spacer, Loader } from '../components/helpers';\nimport { apiLocation } from '../../../config/env.json';\n\nimport { acceptTerms } from '../redux/actions';\nimport {\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector\n} from '../redux/selectors';\n\nimport './email-sign-up.css';\ninterface AcceptPrivacyTermsProps {\n  acceptTerms: (accept: boolean | null) => void;\n  acceptedPrivacyTerms: boolean;\n  isSignedIn: boolean;\n  t: TFunction;\n  showLoading: boolean;\n}\n\nconst mapStateToProps = createSelector(\n  userSelector,\n  isSignedInSelector,\n  signInLoadingSelector,\n  (\n    { acceptedPrivacyTerms }: { acceptedPrivacyTerms: boolean },\n    isSignedIn: boolean,\n    showLoading: boolean\n  ) => ({\n    acceptedPrivacyTerms,\n    isSignedIn,\n    showLoading\n  })\n);\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ acceptTerms }, dispatch);\nconst RedirectToLearn = createRedirect('/learn');\n\nfunction AcceptPrivacyTerms({\n  acceptTerms,\n  acceptedPrivacyTerms,\n  isSignedIn,\n  t,\n  showLoading\n}: AcceptPrivacyTermsProps) {\n  const acceptedPrivacyRef = useRef(acceptedPrivacyTerms);\n  const acceptTermsRef = useRef(acceptTerms);\n\n  useEffect(() => {\n    acceptedPrivacyRef.current = acceptedPrivacyTerms;\n    acceptTermsRef.current = acceptTerms;\n  });\n\n  useEffect(() => {\n    return () => {\n      // if a user navigates away from here we should set acceptedPrivacyTerms\n      // to true (so they do not get pulled back) without changing their email\n      // preferences (hence the null payload)\n      // This makes sure that the user has to opt in to Quincy's emails and that\n      // they are only asked twice\n      if (!acceptedPrivacyRef.current) {\n        acceptTermsRef.current(null);\n      }\n    };\n  }, []);\n\n  function onClick(isWeeklyEmailAccepted: boolean) {\n    acceptTerms(isWeeklyEmailAccepted);\n  }\n\n  function renderEmailListOptin(isSignedIn: boolean, showLoading: boolean) {\n    if (showLoading) {\n      return <Loader fullScreen={true} />;\n    }\n    if (isSignedIn) {\n      return (\n        <Row>\n          <Col md={4} mdOffset={2} sm={5} smOffset={1} xs={12}>\n            <Button\n              block={true}\n              bsSize='lg'\n              bsStyle='primary'\n              className='big-cta-btn'\n              onClick={() => onClick(true)}\n            >\n              {t('buttons.yes-please')}\n            </Button>\n            <ButtonSpacer />\n          </Col>\n          <Col md={4} sm={5} xs={12}>\n            <Button\n              block={true}\n              bsSize='lg'\n              bsStyle='primary'\n              className='big-cta-btn'\n              onClick={() => onClick(false)}\n            >\n              {t('buttons.no-thanks')}\n            </Button>\n            <ButtonSpacer />\n          </Col>\n        </Row>\n      );\n    } else {\n      return (\n        <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n          <ButtonSpacer />\n          <Button\n            block={true}\n            bsSize='lg'\n            bsStyle='primary'\n            className='big-cta-btn'\n            href={`${apiLocation}/signin`}\n          >\n            {t('buttons.sign-up-email-list')}\n          </Button>\n          <ButtonSpacer />\n        </Col>\n      );\n    }\n  }\n\n  return acceptedPrivacyTerms ? (\n    <RedirectToLearn />\n  ) : (\n    <>\n      <Helmet>\n        <title>{t('misc.email-signup')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Grid>\n        <Row>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Spacer />\n            <IntroDescription />\n            <hr />\n          </Col>\n        </Row>\n        <Row className='email-sign-up' data-cy='email-sign-up'>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <strong>{t('misc.quincy')}</strong>\n            <Spacer />\n            <p>{t('misc.email-blast')}</p>\n            <Spacer />\n          </Col>\n          {renderEmailListOptin(isSignedIn, showLoading)}\n          <Col xs={12}>\n            <Spacer />\n          </Col>\n        </Row>\n      </Grid>\n    </>\n  );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(AcceptPrivacyTerms));\n"],"names":["forumLocation","envData","IntroDescription","t","useTranslation","className","i18nKey","to","displayName","window","navigate","mapStateToProps","createSelector","userSelector","isSignedInSelector","signInLoadingSelector","isSignedIn","showLoading","acceptedPrivacyTerms","RedirectToLearn","createRedirect","connect","dispatch","bindActionCreators","acceptTerms","withTranslation","acceptedPrivacyRef","useRef","acceptTermsRef","onClick","isWeeklyEmailAccepted","useEffect","current","md","mdOffset","sm","smOffset","xs","fullScreen","block","bsSize","bsStyle","href","apiLocation","renderEmailListOptin"],"sourceRoot":""}